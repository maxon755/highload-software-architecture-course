user  nginx;
worker_processes  auto;


error_log  /var/log/nginx/error.log notice;
#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    proxy_cache_path /var/cache/nginx/images_cache keys_zone=images_cache:100m levels=1:2 max_size=200m inactive=60m;

    map $request_method $should_purge {
        PURGE   1;
        default 0;
    }

    log_format cache_status '$http_purge_cahce $remote_addr - $upstream_cache_status [$time_local]  '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    access_log  /var/log/nginx/access.log  cache_status;

    server {
        listen       80;
        server_name  cache-server;
        root   /usr/share/nginx/html;
        proxy_cache images_cache;

        access_log  /var/log/nginx/access.log  cache_status;


        location / {
            if ($should_purge) {
                set $my_cache_key "$request_uri";

                content_by_lua_block {
                    local exitStatus = os.execute("/usr/local/bin/nginx-cache-purge /var/cache/nginx/images_cache 1:2 "..ngx.var.my_cache_key)

                    if exitStatus == 0 then
                        ngx.exit(ngx.HTTP_NO_CONTENT)
                    else
                        ngx.exit(ngx.HTTP_BAD_REQUEST)
                    end
                }
            }

            proxy_pass http://image-server:80;
            proxy_cache_min_uses 2;
            proxy_cache_valid 200 10m;

            add_header X-PROXY-CACHE $upstream_cache_status;

            proxy_cache_key "$request_uri";
        }
    }

}
