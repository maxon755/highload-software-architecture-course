version: '3.4'

services:
  web-server:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./public:/usr/share/nginx/html
      - .docker/services/nginx/config/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - haiduk_homework3

  app:
    build:
      context: .
      dockerfile: .docker/services/php/Dockerfile
      args:
        - USER_UID=${USER_UID:-1000}
        - USER_GID=${USER_GID:-1000}
    volumes:
      - .:/var/www/html
    depends_on:
      - elasticsearch
      - mongo
    networks:
      - haiduk_homework3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - haiduk_homework3

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongo:/data/db
    networks:
      - haiduk_homework3

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:pass@mongo:27017/
    depends_on:
      - mongo
    networks:
      - haiduk_homework3

  telegraf:
    build:
      context: .
      dockerfile: .docker/services/telegraf/Dockerfile
      args:
        - DOCKER_GID=${DOCKER_GID:-963}
    volumes:
      - .docker/services/telegraf/config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
      - elasticsearch
      - mongo
      - web-server
      - app
    links:
      - influxdb
    ports:
      - '8125:8125'
    networks:
      - haiduk_homework3

  influxdb:
    image: influxdb:1.8-alpine
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      - '8086:8086'
    volumes:
      - influxdb:/var/lib/influxdb
    networks:
      - haiduk_homework3

  grafana:
    image: grafana/grafana
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    links:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - grafana:/var/lib/grafana
      - .docker/services/grafana/provisioning/:/etc/grafana/provisioning/
      - .docker/services/grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - haiduk_homework3

volumes:
  elasticsearch:
    driver: local
  mongo:
    driver: local
  grafana:
    driver: local
  influxdb:
    driver: local


networks:
  haiduk_homework3:
    name: haiduk_homework3
